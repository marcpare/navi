% git, zsh
# Command git add
ga
# Command git add -u
gau
# Command git add --all
gaa
# Command git add --patch
gapa
# Command git branch
gb
# Command git branch -a
gba
# Command git branch -d
gbd
# Command git blame -b -w
gbl
# Command git branch --no-merged
gbnm
# Command git branch --remote
gbr
# Command git bisect
gbs
# Command git bisect bad
gbsb
# Command git bisect good
gbsg
# Command git bisect reset
gbsr
# Command git bisect start
gbss
# Command git commit -v
gc
# Command git commit -v --amend
gc!
# Command git commit -v -a
gca
# Command git commit -v -a --amend
gca!
# Command git commit -v -a --no-edit --amend
gcan!
# Command git commit -v -a -s --no-edit --amend
gcans!
# Command git commit -a -m
gcam
# Command git commit -s -m
gcsm
# Command git checkout -b
gcb
# Command git config --list
gcf
# Command git clone --recursive
gcl
# Command git clean -id
gclean
# Command git reset --hard && git clean -dfx
gpristine
# Command git checkout master
gcm
# Command git checkout develop
gcd
# Command git commit -m
gcmsg
# Command git checkout
gco
# Command git shortlog -sn
gcount
# Command git cherry-pick
gcp
# Command git cherry-pick --abort
gcpa
# Command git cherry-pick --continue
gcpc
# Command git commit -S
gcs
# Command git diff
gd
# Command git diff --cached
gdca
# Command git describe --tags `git rev-list --tags --max-count=1`
gdct
# Command git diff --staged
gds
# Command git diff-tree --no-commit-id --name-only -r
gdt
# Command git diff --word-diff
gdw
# Command git fetch
gf
# Command git fetch --all --prune
gfa
# Command git fetch origin
gfo
# Command git gui citool
gg
# Command git gui citool --amend
gga
# Command git pull origin $(current_branch) && git push origin $(current_branch)
ggpnp
# Command git pull origin $(current_branch)
ggpull
# Command git pull origin $(current_branch)
ggl
# Command git pull --rebase origin $(current_branch)
ggpur
# Command git pull upstream master
glum
# Command git push origin $(current_branch)
ggpush
# Command git push origin $(current_branch)
ggp
# Command git push --force-with-lease origin <your_argument>/$(current_branch)
ggfl
# Command git branch --set-upstream-to=origin/$(current_branch)
ggsup
# Command git push --set-upstream origin $(current_branch)
gpsup
# Command git update-index --assume-unchanged
gignore
# Command git ls-files -v | grep "^:lower:"
gignored
# Command git svn dcommit && git push github master:svntrunk
git-svn-dcommit-push
# Command gitk --all --branches
gk
# Command git pull
gl
# Command git log --stat --max-count = 10
glg
# Command git log --graph --max-count = 10
glgg
# Command git log --graph --decorate --all
glgga
# Command git log --oneline --decorate --color
glo
# Command git log --oneline --decorate --color --graph
glog
# Command _git_log_prettily (git log --pretty=$1)
glp
# Command git merge
gm
# Command git merge --abort
gma
# Command git mergetool --no-prompt
gmt
# Command git push
gp
# Command git push origin --all && git push origin --tags
gpoat
# Command git remote
gr
# Command git rebase
grb
# Command git rebase --abort
grba
# Command git rebase --continue
grbc
# Command git rebase develop
grbd
# Command git rebase master
grbm
# Command git rebase --skip
grbs
# Command git rebase -i
grbi
# Command git reset HEAD
grh
# Command git reset HEAD --hard
grhh
# Command git remote rename
grmv
# Command git remote remove
grrm
# Command git restore
grs
# Command git remote set-url
grset
# Command cd $(git rev-parse --show-toplevel || echo ".")
grt
# Command git remote update
grup
# Command git remote -v
grv
# Command git svn dcommit
gsd
# Command git show --pretty = short --show-signature
gsps
# Command git svn rebase
gsr
# Command git status -s
gss
# Command git status
gst
# Command git stash save
gsta
# Command git stash apply
gstaa
# Command git stash drop
gstd
# Command git stash list
gstl
# Command git stash pop
gstp
# Command git stash show --text
gsts
# Command git submodule update
gsu
# Command git tag -s
gts
# Command git update-index --no-assume-unchanged
gunignore
# Command git log -n 1 | grep -q -c "--wip--" && git reset HEAD~1
gunwip
# Command git pull --rebase
gup
# Command git verify-tag
gvt
# Command git whatchanged -p --abbrev-commit --pretty = medium
gwch
# Command git add -A; git ls-files --deleted -z | xargs -r0 git rm; git commit -m "--wip--"
gwip

# Dummy item at the end
echo "foo"
